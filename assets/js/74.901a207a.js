(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{488:function(t,e,a){"use strict";a.r(e);var s=a(10),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"console-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console-api"}},[t._v("#")]),t._v(" Console API")]),t._v(" "),a("h2",{attrs:{id:"general"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[t._v("#")]),t._v(" General")]),t._v(" "),a("h3",{attrs:{id:"help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#help"}},[t._v("#")]),t._v(" "),a("code",[t._v("help")])]),t._v(" "),a("p",[t._v("Get a list of all available commands")]),t._v(" "),a("h3",{attrs:{id:"v"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[t._v("#")]),t._v(" "),a("code",[t._v("v")])]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("p",[t._v("Read the current version of the firmwares")]),t._v(" "),a("h3",{attrs:{id:"reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" "),a("code",[t._v("reset")])]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("p",[t._v("Reset the board via a software reset.")]),t._v(" "),a("h3",{attrs:{id:"rb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rb"}},[t._v("#")]),t._v(" "),a("code",[t._v("rb")])]),t._v(" "),a("p",[t._v("Read back bytes from the internal flashing.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" [1] start, [2] stop")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[1] - uin32\n - 0..0x40000: start byte of the readout\n\n[2] - uin32\n - 0..0x40000: end byte of the readout \n")])])]),a("h3",{attrs:{id:"jumpbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jumpbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("jumpbl")])]),t._v(" "),a("p",[t._v("Jump back to the bootloader and stay there.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"jump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jump"}},[t._v("#")]),t._v(" "),a("code",[t._v("jump")])]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v("  [1] target")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[1] - uint8: \n - 1: firmware loader\n - 2: tag\n - 3: anchor\n")])])]),a("h2",{attrs:{id:"system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system"}},[t._v("#")]),t._v(" System")]),t._v(" "),a("h3",{attrs:{id:"free"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#free"}},[t._v("#")]),t._v(" "),a("code",[t._v("free")])]),t._v(" "),a("p",[t._v("Free memory on the stack/heap.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"uptime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uptime"}},[t._v("#")]),t._v(" "),a("code",[t._v("uptime")])]),t._v(" "),a("p",[t._v("Uptime in seconds since last reboot.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"synctime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synctime"}},[t._v("#")]),t._v(" "),a("code",[t._v("synctime")])]),t._v(" "),a("p",[t._v("Synchronized system time. Expressed in microseconds.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"ps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[t._v("#")]),t._v(" "),a("code",[t._v("ps")])]),t._v(" "),a("p",[t._v("List of all running threads")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"stats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stats"}},[t._v("#")]),t._v(" "),a("code",[t._v("stats")])]),t._v(" "),a("p",[t._v("Statistics of the board (diagnostic statistics, algorithmic statistics, ...).")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h2",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[t._v("#")]),t._v(" Network "),a("Badge",{attrs:{text:"anchor only",type:"warn"}})],1),t._v(" "),a("h3",{attrs:{id:"inetinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inetinfo"}},[t._v("#")]),t._v(" "),a("code",[t._v("inetinfo")])]),t._v(" "),a("p",[t._v("Display all the inet info such as IP address, netmask and gateway.")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" none")]),t._v(" "),a("h3",{attrs:{id:"setip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setip"}},[t._v("#")]),t._v(" "),a("code",[t._v("setip")])]),t._v(" "),a("p",[t._v("Set the IP address")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v(" [1] ip, [2] netmask, [3] gateway")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[1] - IP format:\n - e.g. 192.168.0.101\n[2] - IP format:\n - e.g. 255.255.255.0\n[3] - IP format:\n - e.g. 192.168.0.1\n")])])]),a("h2",{attrs:{id:"sensors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sensors"}},[t._v("#")]),t._v(" Sensors")]),t._v(" "),a("h3",{attrs:{id:"ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[t._v("#")]),t._v(" "),a("code",[t._v("ssr")])]),t._v(" "),a("p",[t._v("Set the sample rate of sensor")]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")]),t._v("  [1] sensor, [2] rate")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[1] - uint8: \n - 1: accelerometer\n - 2: gyroscope\n - 3: magnetometer\n - 4: pressure sensor\n - 5: ...\n\n[2] - uint16: \n - 0..1000 for accelerometer and gyroscope\n - 0..80 for magnetometer\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);