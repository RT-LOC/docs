(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{483:function(e,t,a){"use strict";a.r(t);var o=a(10),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apis"}},[e._v("#")]),e._v(" APIs")]),e._v(" "),a("p",[e._v("There are different ways to integrate with the RTLOC system, depending on your needs.")]),e._v(" "),a("AnimApis"),e._v(" "),a("h2",{attrs:{id:"real-time-device-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#real-time-device-data"}},[e._v("#")]),e._v(" Real-time device data")]),e._v(" "),a("p",[e._v("The position and sensor data for each device can be accessed in real-time in the following ways:")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("RouterLink",{attrs:{to:"/api/api_engine_local_mqtt.html"}},[a("code",[e._v("Local JSON over MQTT")])])],1),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("Easy to understand, easy to integrate JSON format")]),e._v(" "),a("li",[e._v("Pub/sub per topic type because of MQTT")]),e._v(" "),a("li",[e._v("Most-complete API with zone information, events")]),e._v(" "),a("li",[e._v("Access data over websocket from a browser (MQTT over websocket) or over TCP (MQTT over TCP) in a script or program")])])]),e._v(" "),a("li",[a("p",[a("strong",[a("RouterLink",{attrs:{to:"/api/api_engine_cloud_mqtt.html"}},[a("code",[e._v("Cloud JSON over MQTT")])])],1),e._v(": Use your own broker to receive the above data")])]),e._v(" "),a("li",[a("p",[a("strong",[a("RouterLink",{attrs:{to:"/api/api_engine_local_bin.html"}},[a("code",[e._v("Binary over TCP")])])],1),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("Compact format, requiring some more decoding effort")]),e._v(" "),a("li",[e._v("Includes raw data direct from the engine, no zone/event/race data")])])])]),e._v(" "),a("h2",{attrs:{id:"meta-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#meta-data"}},[e._v("#")]),e._v(" Meta data")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Single device")]),e._v(" (tag / anchor) information can be read through the CLI or via Bluetooth (BLE).\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/api/api_ble.html"}},[a("code",[e._v("BLE API")])]),e._v(" - Make a wireless connection with one of the tags with our BLE interface.")],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/api/api_console.html"}},[a("code",[e._v("Device CLI")])]),e._v(" - Access the RTLS hardware (anchors and tags) via one of the "),a("RouterLink",{attrs:{to:"/embedded/#interfaces"}},[e._v("interfaces")]),e._v(".")],1)])])]),e._v(" "),a("h2",{attrs:{id:"custom-firmware-toolkit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-firmware-toolkit"}},[e._v("#")]),e._v(" Custom firmware toolkit")]),e._v(" "),a("ul",[a("li",[e._v("If you want to go low-level build your own "),a("strong",[e._v("firmware")]),e._v(" and run it next to ours using our "),a("RouterLink",{attrs:{to:"/api/api_firmware.html"}},[a("code",[e._v("firmware library")])])],1)])],1)}),[],!1,null,null,null);t.default=r.exports}}]);